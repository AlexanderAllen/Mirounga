version: '3.7'

# Dev stack
#
# - Drupal source code does not change with the environment.
# - Uses PHP FPM image with debugging tools enabled.
# - MUST use MOUNTED volumes instead of NAMED volumes in order to view and debug sources from host IDEs.
# - However with VSC it may be possible to avoid mounts https://code.visualstudio.com/docs/remote/containers-advanced

services:

  nginx:
    environment:
      PROJECT_DEST: "${PROJECT_DEST}"
    volumes:
      - "${PROJECT_ROOT}:${PROJECT_DEST}"
      # Virtual host.
      - ./build/nginx/etc/nginx/conf.d/vhost.conf:/etc/nginx/conf.d/default.conf
      # Main config.
      - ./build/nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      # NJS Scripting.
      - ./build/nginx/http.js:/etc/nginx/http.js


  # mysql logging options
  mysql:
    # Allocate tty for non-root user logging into docker logs at /dev/std{out,err}.
    tty: true
    entrypoint: /opt/docker/entrypoint
    command:
      # https://mariadb.com/kb/en/server-system-variables/#log_error
      # https://mariadb.com/kb/en/error-log/
      # https://mariadb.com/kb/en/error-log/#writing-the-error-log-to-stderr-on-unix

      # On Unix, if the log_error system variable is not set, then errors are written to stderr,
      # which usually means that the log messages are output to the terminal that started mysqld.
      # - --log-error
      # - --log-output=FILE

      # Whether to log all queries or not.
      # Enabling the general log will slow down things.
      #- --general-log-file=/dev/stdout
      #- --general-log=ON

      # Setup slow query log.
      # https://mariadb.com/kb/en/server-system-variables/#slow_query_log
      - --slow-query-log
      - --slow-query-log-file=/app/slow.log

      # https://mariadb.com/kb/en/server-system-variables/#log_slow_verbosity
      - --log-slow-verbosity=query_plan,explain

      # https://mariadb.com/kb/en/server-system-variables/#log_queries_not_using_indexes
      # Queries that don't use an index, or that perform a full index scan where the index doesn't limit the number of rows,
      # will be logged to the slow query log (regardless of time taken).
      # The slow query log needs to be enabled for this to have an effect.
      - --log-queries-not-using-indexes=1

      # https://mariadb.com/kb/en/server-system-variables/#long_query_time
      - --long-query-time=1

      # https://www.drupal.org/project/drupal/issues/1059718
      # https://mariadb.com/kb/en/server-system-variables/#max_allowed_packet
      - --max-allowed-packet=128M

      # https://mariadb.com/kb/en/innodb-system-variables/#innodb_buffer_pool_size
      - --innodb-buffer-pool-size=256M

  php-fpm:
    # Allow nobody user logging to /dev/stdout.
    tty: true
    image: "alexanderallen/php7-fpm.${ENVIRONMENT:-dev}:alpine-3.11"
    environment:
      PHP_FPM_SLOWLOG_TIMEOUT: 0
      # Use environment variables to speed up FPM optimization cycles.
      PHP_FPM_PM_MANAGER: dynamic
      PHP_FPM_CHILDREN_MAX: 15
      # Default Value: min_spare_servers + (max_spare_servers - min_spare_servers) / 2
      PHP_FPM_CHILDREN_START: 7
      PHP_FPM_CHILDREN_SPARE_MIN: 5
      PHP_FPM_CHILDREN_SPARE_MAX: 10

      # - /c/Users/richa/Sites:/www
      # - ~/Sites/xhprof_run:/var/tmp/xhprof

      # See these issues:
      # * https://github.com/docker/for-linux/issues/264#issuecomment-564047473
      # XDEBUG_REMOTE_HOST: 10.254.254.254 # Docker for Mac host alias: use it instead of the default gateway 172.18.0.1.
      XDEBUG_REMOTE_HOST: ${XDEBUG_REMOTE_HOST}

      # Must be disabled (set to 0) in order for remote_host to work.
      # https://stackoverflow.com/a/55856941/467453
      # Recommended: DISABLE ON DOCKER
      # When enabled on Docker, XDebug connects to the Docker VM instead of the IDE client.
      XDEBUG_CONNECT_BACK: 0

      # Forward XDebug connection logs to Docker for debugging
      XDEBUG_REMOTE_LOG: /dev/stdout

      XDEBUG_REMOTE_PORT: 9000
      XDEBUG_IDE_KEY: 'PHPSTORM'

      # ; This switch controls whether Xdebug should try to contact a debug client which is listening on the host and port as
      # ; set with the settings xdebug.remote_host and xdebug.remote_port
      XDEBUG_REMOTE_ENABLE: 1

      # If this setting is 1, then stacktraces will be shown by default on an error event.
      # It will also make xdebug logs extremely noisey and print caught exceptions as well.
      XDEBUG_DEFAULT_ENABLE: 0

      # If this setting is set to 1 then errors will always be displayed, no matter what the setting of PHP's
      # ; display_errors is.
      XDEBUG_FORCE_DISPLAY_ERRORS: 1

      # ; When this setting is set to 1, Xdebug will show a stack trace whenever an exception is raised - even if this exception
      # ; is actually caught.
      XDEBUG_SHOW_EXCEPTION_TRACE: 0

    volumes:
      - "${PROJECT_ROOT}:${PROJECT_DEST}"
