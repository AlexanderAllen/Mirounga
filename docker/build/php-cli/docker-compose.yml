version: '3.4'
services:

  # To copy the contents of /composer to the host for debugging, use docker cp.
  # http://stackoverflow.com/a/36246479
  # Example:
  #   docker-compose -f php-cli.yml run drush-7
  #   exit
  #   docker ps -a | head
  #   docker cp localenv_drush-7_run_5:/composer ~/.composer
  # or, if you have a host mount at like ~/.composer:/composer_host
  #   docker-compose -f php-cli.yml run drush-7
  #   rm -rf /composer_host/*
  #   cp -rf /composer/ /composer_host/

  # CREDITS:
  #
  # Custom Composer image inspired by
  # - https://github.com/RobLoach/docker-composer
  # - https://hub.docker.com/r/composer/composer/~/dockerfile/

  # Base Composer image with minimal dependencies.
  php-cli.prod:
    image: alexanderallen/php7-cli.prod:alpine-3.11
    build:
      context: .
      dockerfile: Dockerfile
      target: composer-prod
    environment:
      COMPOSER_VERSION: master
    volumes:
      - ~/Sites:/www

  # Drush version for Drupal 8.4+, but not backwards compat with 8.3- and below.
  # https://docs.drush.org/en/master/install/
  drush9-prod:
    image: alexanderallen/php7-cli-drush9.prod:alpine-3.11
    build:
      context: .
      dockerfile: Dockerfile
      # Build target drush9 might be compatible with DRUSH_VERSION 10.
      target: drush9-prod
      args:
        DRUSH_VERSION: 9

  drush7-prod:
    image: alexanderallen/php7-cli-drush7.prod:alpine-3.11
    build:
      context: .
      dockerfile: Dockerfile
      # Build target drush9 might be compatible with DRUSH_VERSION 10.
      target: drush7-prod
      args:
        DRUSH_TAG: "7.4.0"

  drush9-devel:
    image: alexanderallen/php7-cli-drush9.dev:alpine-3.11
    build:
      context: .
      dockerfile: Dockerfile
      # Target including xdebug, xhprof, and any other perf tools.
      target: drush9-dev
      args:
        DRUSH_VERSION: 9
