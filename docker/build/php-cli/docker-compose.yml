version: '3.4'
services:

  # DRUSH COMPATIBILITY MATRIX
  # https://www.drush.org/latest/install/

  # To copy the contents of /composer to the host for debugging, use docker cp.
  # http://stackoverflow.com/a/36246479
  # Example:
  #   docker-compose -f php-cli.yml run drush-7
  #   exit
  #   docker ps -a | head
  #   docker cp localenv_drush-7_run_5:/composer ~/.composer
  # or, if you have a host mount at like ~/.composer:/composer_host
  #   docker-compose -f php-cli.yml run drush-7
  #   rm -rf /composer_host/*
  #   cp -rf /composer/ /composer_host/

  # CREDITS:
  #
  # Custom Composer image inspired by
  # - https://github.com/RobLoach/docker-composer
  # - https://hub.docker.com/r/composer/composer/~/dockerfile/

  # Base Composer image with minimal dependencies.
  php7-cli.prod:
    image: alexanderallen/php7-cli.prod:alpine-${ALPINE_MAJOR}.${ALPINE_MINOR}.${ALPINE_PATCH}
    build:
      context: .
      dockerfile: Dockerfile
      target: composer
    environment:
      COMPOSER_VERSION: master

  drush7:
    image: alexanderallen/php7-cli-drush7.prod:alpine-${ALPINE_MAJOR}.${ALPINE_MINOR}.${ALPINE_PATCH}
    build:
      context: .
      dockerfile: Dockerfile
      target: drush7
      args:
        DRUSH_TAG: "7.4.0"

  drush9:
    image: alexanderallen/php7-cli-drush9.prod:alpine-${ALPINE_MAJOR}.${ALPINE_MINOR}.${ALPINE_PATCH}
    build:
      context: .
      dockerfile: Dockerfile
      target: drush9
      args:
        DRUSH_VERSION: 9

  drush8:
    image: alexanderallen/php7-cli-drush8.prod:alpine-${ALPINE_MAJOR}.${ALPINE_MINOR}.${ALPINE_PATCH}
    build:
      context: .
      dockerfile: Dockerfile
      target: drush-multi-global
      args:
        DRUSH_VERSION: 8

  drush10:
    image: alexanderallen/php7-cli-drush10.prod:alpine-${ALPINE_MAJOR}.${ALPINE_MINOR}.${ALPINE_PATCH}
    build:
      context: .
      dockerfile: Dockerfile
      target: drush-multi-global
      args:
        DRUSH_VERSION: 10
