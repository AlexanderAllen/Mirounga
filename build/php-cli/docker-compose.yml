version: '3.4'
services:

  # To copy the contents of /composer to the host for debugging, use docker cp.
  # http://stackoverflow.com/a/36246479
  # Example:
  #   docker-compose -f php-cli.yml run drush-7
  #   exit
  #   docker ps -a | head
  #   docker cp localenv_drush-7_run_5:/composer ~/.composer
  # or, if you have a host mount at like ~/.composer:/composer_host
  #   docker-compose -f php-cli.yml run drush-7
  #   rm -rf /composer_host/*
  #   cp -rf /composer/ /composer_host/

  # CREDITS:
  #
  # Custom Composer image inspired by
  # - https://github.com/RobLoach/docker-composer
  # - https://hub.docker.com/r/composer/composer/~/dockerfile/

  # Base image with minimal dependencies.
  php-cli.core:
    image: alexanderallen/php-cli.core:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: core
    environment:
      COMPOSER_VERSION: master
    volumes:
      - ~/Sites:/www

  # Image optimized for Drupal 7, validated on 12/24/2019 - Merry XMas!
  php-cli.d7:
    image: alexanderallen/php-cli:d7
    build:
      context: ./drupal/7
      dockerfile: Dockerfile
    volumes:
      - ~/Sites:/www

  # Image optimized for Drupal 8, validated on 12/24/2019 - Merry XMas!
  php-cli.d8:
    image: alexanderallen/php-cli:d8
    build:
      context: ./drupal/8
      dockerfile: Dockerfile
    volumes:
      - ~/Sites:/www

#  Example on how to create a Composer container on the main compose file.
#  composer:
#    image: alexanderallen/php-cli
#    links:
#      - mysql:mysql
#      - memcached:memcached
#    volumes:
#      - ~/.ssh:/root/.ssh
#      - ~/.composer:/composer
#      - ~/Sites:/www
